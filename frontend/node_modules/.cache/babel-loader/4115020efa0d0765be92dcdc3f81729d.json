{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\Documents\\\\Github Repository VSCode\\\\DB_end_project\\\\frontend\\\\src\\\\utils\\\\AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  let [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  const history = useNavigate();\n\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n  };\n\n  let updateToken = async () => {\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        refresh: authTokens.refresh\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n    } else {\n      setAuthTokens(null);\n      setUser(null);\n      localStorage.removeItem(\"authTokens\");\n    }\n  };\n\n  let contextData = {\n    user: user,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"8BPZszhN06hwxuce+NyPd3oVLYA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/drago/Documents/Github Repository VSCode/DB_end_project/frontend/src/utils/AuthContext.jsx"],"names":["createContext","useState","useEffect","jwt_decode","useNavigate","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","history","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","username","target","value","password","data","json","status","access","setItem","alert","logoutUser","removeItem","updateToken","refresh","contextData"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  let [authTokens, setAuthTokens] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n  let [user, setUser] = useState(() =>\r\n    localStorage.getItem(\"authTokens\")\r\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\r\n      : null\r\n  );\r\n\r\n  const history = useNavigate();\r\n\r\n  let loginUser = async (e) => {\r\n    e.preventDefault();\r\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: e.target.username.value,\r\n        password: e.target.password.value,\r\n      }),\r\n    });\r\n    let data = await response.json();\r\n\r\n    if (response.status === 200) {\r\n      setAuthTokens(data);\r\n      setUser(jwt_decode(data.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n    } else {\r\n      alert(\"Something went wrong!\");\r\n    }\r\n  };\r\n\r\n  let logoutUser = () => {\r\n    setAuthTokens(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"authTokens\");\r\n  };\r\n\r\n  let updateToken = async () => {\r\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ refresh: authTokens.refresh }),\r\n    });\r\n    let data = await response.json();\r\n\r\n    if (response.status === 200) {\r\n      setAuthTokens(data);\r\n      setUser(jwt_decode(data.access));\r\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\r\n    } else {\r\n      setAuthTokens(null);\r\n      setUser(null);\r\n      localStorage.removeItem(\"authTokens\");\r\n    }\r\n  };\r\n\r\n  let contextData = {\r\n    user: user,\r\n    loginUser: loginUser,\r\n    logoutUser: logoutUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}