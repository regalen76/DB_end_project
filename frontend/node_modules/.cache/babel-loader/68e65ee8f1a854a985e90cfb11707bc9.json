{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\Documents\\\\Github Repository VSCode\\\\DB_end_project\\\\frontend\\\\src\\\\utils\\\\AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  const history = useNavigate();\n\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      alert('Something went wrong!');\n    }\n  };\n\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(jwt_decode(null));\n    localStorage.removeItem('authTokens');\n  };\n\n  let contextData = {\n    user: user,\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"nMy+JVWhuDaDO+/5cPsShk0PMN0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/drago/Documents/Github Repository VSCode/DB_end_project/frontend/src/utils/AuthContext.jsx"],"names":["createContext","useState","useEffect","jwt_decode","useNavigate","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","history","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","target","username","value","password","data","json","status","access","setItem","alert","logoutUser","removeItem","contextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AAEA,eAAeK,WAAf;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAG5C,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,MAAKS,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAqCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAArC,GAAsF,IAA5F,CAA1C;AACA,MAAI,CAACG,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,MAAKS,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAqCR,UAAU,CAACO,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAD,CAA/C,GAAsF,IAA5F,CAA9B;AAEA,QAAMK,OAAO,GAAGZ,WAAW,EAA3B;;AAEA,MAAIa,SAAS,GAAG,MAAOC,CAAP,IAAa;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAC7DC,MAAAA,MAAM,EAAC,MADsD;AAE7DC,MAAAA,OAAO,EAAC;AACN,wBAAe;AADT,OAFqD;AAK7DC,MAAAA,IAAI,EAACZ,IAAI,CAACa,SAAL,CAAe;AAAC,oBAAWP,CAAC,CAACQ,MAAF,CAASC,QAAT,CAAkBC,KAA9B;AAAqC,oBAAWV,CAAC,CAACQ,MAAF,CAASG,QAAT,CAAkBD;AAAlE,OAAf;AALwD,KAArC,CAA1B;AAOA,QAAIE,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAjB;;AAEA,QAAGX,QAAQ,CAACY,MAAT,KAAoB,GAAvB,EAA2B;AACzBvB,MAAAA,aAAa,CAACqB,IAAD,CAAb;AACAf,MAAAA,OAAO,CAACZ,UAAU,CAAC2B,IAAI,CAACG,MAAN,CAAX,CAAP;AACAvB,MAAAA,YAAY,CAACwB,OAAb,CAAqB,YAArB,EAAmCtB,IAAI,CAACa,SAAL,CAAeK,IAAf,CAAnC;AACD,KAJD,MAIK;AACHK,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;AACF,GAlBD;;AAoBA,MAAIC,UAAU,GAAG,MAAM;AACrB3B,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAM,IAAAA,OAAO,CAACZ,UAAU,CAAC,IAAD,CAAX,CAAP;AACAO,IAAAA,YAAY,CAAC2B,UAAb,CAAwB,YAAxB;AACD,GAJD;;AAMA,MAAIC,WAAW,GAAG;AAChBxB,IAAAA,IAAI,EAACA,IADW;AAEhBG,IAAAA,SAAS,EAACA;AAFM,GAAlB;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEqB,WAA7B;AAAA,cACG/B;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5CM;;GAAMD,Y;UAMKF,W;;;KANLE,Y","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\r\n  \r\n  let [authTokens, setAuthTokens] = useState(()=> localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\r\n  let [user, setUser] = useState(()=> localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\r\n\r\n  const history = useNavigate()\r\n\r\n  let loginUser = async (e )=> {\r\n    e.preventDefault()\r\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\r\n      method:'POST',\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body:JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\r\n    })\r\n    let data = await response.json()\r\n\r\n    if(response.status === 200){\r\n      setAuthTokens(data)\r\n      setUser(jwt_decode(data.access))\r\n      localStorage.setItem('authTokens', JSON.stringify(data))\r\n    }else{\r\n      alert('Something went wrong!')\r\n    }\r\n  }\r\n\r\n  let logoutUser = () => {\r\n    setAuthTokens(null)\r\n    setUser(jwt_decode(null))\r\n    localStorage.removeItem('authTokens')\r\n  }\r\n\r\n  let contextData = {\r\n    user:user,\r\n    loginUser:loginUser\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}